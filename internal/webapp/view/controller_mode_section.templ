package view

import (
	"context"
	"fmt"
	"github.com/deseteral/resistere/internal/controller"
	"github.com/invopop/ctxi18n/i18n"
)

templ ControllerModeSection(c *controller.Controller) {
	<fieldset id="controller-mode-section">
		<legend>{ i18n.T(ctx, "mode.tab_title") }</legend>
		<div>
			{ i18n.T(ctx, "mode.current_mode") }: <strong>{ getModeName(ctx, c.Mode) }</strong>
		</div>
		<div
			hx-target="#controller-mode-section"
			hx-swap="outerHTML"
		>
			<style>
			me {
				display: flex;
				flex-direction: row;

				button {
					width: 130px;
				}
			}
			</style>
			<button
				hx-post={ getUrlForModeButton(controller.ModePVAutomatic) }
				disabled?={ isModeButtonDisabled(controller.ModePVAutomatic, c.Mode) }
			>
				<i class="ph-bold ph-sun"></i>
				{ getModeName(ctx, controller.ModePVAutomatic) }
			</button>
			<button
				hx-post={ getUrlForModeButton(controller.ModeManual) }
				disabled?={ isModeButtonDisabled(controller.ModeManual, c.Mode) }
			>
				<i class="ph-bold ph-hand-tap"></i>
				{ getModeName(ctx, controller.ModeManual) }
			</button>
		</div>
		<div>
			<style>
				me {
					font-size: 13px;
					font-style: italic;

					display: flex;
					flex-direction: row;
					align-items: center;

					margin-top: 16px;

					i {
						margin-right: 4px;
					}
				}
				</style>
			<i class="ph-bold ph-info"></i>
			{ getHelpMessageForMode(ctx, c.Mode) }
		</div>
	</fieldset>
}

func getUrlForModeButton(buttonMode controller.Mode) string {
	return fmt.Sprintf("/controller/mode?value=%d", int(buttonMode))
}

func isModeButtonDisabled(buttonMode controller.Mode, currentMode controller.Mode) bool {
	return buttonMode == currentMode
}

func getModeName(ctx context.Context, mode controller.Mode) string {
	if mode == controller.ModePVAutomatic {
		return i18n.T(ctx, "mode.automatic")
	} else {
		return i18n.T(ctx, "mode.manual")
	}
}

func getHelpMessageForMode(ctx context.Context, mode controller.Mode) string {
	if mode == controller.ModePVAutomatic {
		return i18n.T(ctx, "mode.help_message_automatic")
	} else {
		return i18n.T(ctx, "mode.help_message_manual")
	}
}
